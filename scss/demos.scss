/* DEMOS v1.0
 * Copyright 2012, Stephen Lubbock
 * www.getdemos.co.uk
 * Based upon Skeleton Copyright 2011, Dave Gamache */

// Table of Contents
// ==================================================
//  #Imports
//	#Base 1140px Grid
//	#Website Below 1140px
//	#Tablet (Portrait)
//	#Mobile (Portrait)
//	#Mobile (Landscape)
//	#Clearing

// #Imports
// ==================================================

	@import "variables", "base", "chosen", "animate";	

// #Base 1140px Grid
// ==================================================

    .container {
    	position: relative;
    	width: $maxWidth;
    	margin: 0 auto;
    	padding: 0;
    	
    	.column, .columns {
    		float: left;
    		display: inline;
    		margin-left: 10px;
    		margin-right: 10px;
    	}
    	
    	// Base Grid + Offets
    	$i: 1;
    	@each $name in $columnNames {
    		.#{$name}.column, .#{$name}.columns { width: ($maxColumn * $i) - 20; }
    		.offset-by-#{$name} { padding-left: $maxColumn * $i; }
    		$i: $i + 1;
    	}
    	$i: $i - 1;
    	
    	// Thirds
    	.one-third.column        	{ width: ($maxColumn * ($i/3)) - 20; }	
    	.two-thirds.column       	{ width: ($maxColumn * (($i/3) * 2)) - 20; }
    }
    
    .row							{ margin-bottom: 20px; }
	
	// Nested Column Classes
	.column.alpha, .columns.alpha	{ margin-left: 0; }
	.column.omega, .columns.omega	{ margin-right: 0; }
                       
// #Website Below 1140px
// ==================================================

    @media only screen and (min-width: 960px) and (max-width: $maxWidth - 1 ) {
	    .container {
	    	position: relative;
	    	width: 960px;
	    	margin: 0 auto;
	    	padding: 0;
	    	
		    .container .column, .container .columns {
		    	float: left;
		    	display: inline;
		    	margin-left: 10px;
		    	margin-right: 10px;
		    }
		    
		    // Base Grid + Offets
		    $i: 1;
		    @each $name in $columnNames {
	    		.#{$name}.column, .#{$name}.columns { width: (80px * $i) - 20; }
	    		.offset-by-#{$name} { padding-left: 80px * $i; }
	    		$i: $i + 1;
	    	}
	    	$i: $i - 1;
	    
	    	// Thirds
	    	.one-third.column     		{ width: 300px; }
	    	.two-thirds.column      	{ width: 620px; }
		}
		
		.row							{ margin-bottom: 20px; }
	
		// Nested Column Classes
		.column.alpha, .columns.alpha	{ margin-left: 0; }
		.column.omega, .columns.omega	{ margin-right: 0; }
		
    }

// #Tablet (Portrait)
// ==================================================

    @media only screen and (min-width: 768px) and (max-width: 959px) {
        .container {
        	width: 768px;
        	
        	.column, .columns {
        		margin-left: 10px;
        		margin-right: 10px;
        	}
        	
        	
        	// Base Grid + Offets
	    	$i: 1;
	    	@each $name in $columnNames {
	    		.#{$name}.column, .#{$name}.columns { width: (64px * $i) - 20; }
	    		.offset-by-#{$name} { padding-left: 64px * $i; }
	    		$i: $i + 1;
	    	}
	    	$i: $i - 1;

        	// Thirds
        	.one-third.column			{ width: 236px; }
        	.two-thirds.column			{ width: 492px; }
        }
        
        .column.alpha, .columns.alpha	{ margin-left: 0; margin-right: 10px; }
        .column.omega, .columns.omega	{ margin-right: 0; margin-left: 10px; }
        .alpha.omega					{ margin-left: 0; margin-right: 0; }
    }
    
// #Mobile (Portrait)
// ==================================================

    @media only screen and (max-width: 767px) {
        .container {
        	width: 300px;
        	
        	.columns, .column {
        		margin: 0;
        	}
        	
        	// Base Grid + Offets
	    	$i: 1;
	    	@each $name in $columnNames {
	    		.#{$name}.column, .#{$name}.columns { width: 300px; }
	    		.offset-by-#{$name} { padding-left: 0px; }
	    		$i: $i + 1;
	    	}
	    	$i: $i - 1;
	    	
	    	// Thirds
	        .one-third.column,
	        .two-thirds.column			{ width: 300px; }
			
			form .columns, form .column	{ margin-bottom: 20px; }
        }
    }
    

// #Mobile (Landscape)
// ==================================================

    @media only screen and (min-width: 480px) and (max-width: 767px) {
        .container {
        	width: 420px;
        	
        	.columns, .column {
        		margin: 0;
        	}

        	// Base Grid + Offets
	    	$i: 1;
	    	@each $name in $columnNames {
	    		.#{$name}.column, .#{$name}.columns { width: 420px; }
	    		.offset-by-#{$name} { padding-left: 0px; }
	    		$i: $i + 1;
	    	}
	    	$i: $i - 1;
	    	
	    	// Thirds
        	.one-third.column,
        	.two-thirds.column			{ width: 420px; }
        	
        	form .columns, form .column	{ margin-bottom: 20px; }
        }
    }
    
// #Clearing
// ==================================================

	// Self Clearing
    .container {
    	&:after {
	    	content: "\0020";
	    	display: block;
	    	height: 0;
	    	clear: both;
	    	visibility: hidden;
	    }
    }

    // Use clearfix class on parent to clear nested columns,
    // or wrap each row of columns in a <div class="row">
    .clearfix, .row {
    	&:before, &:after {
	    	content: '\0020';
	    	display: block;
	    	overflow: hidden;
	    	visibility: hidden;
	    	width: 0;
	    	height: 0;
	    }
    }
    
    .row, .clearfix {
    	&:after {
	    	clear: both;
	    }
    }
    
    .row,
    .clearfix {
      zoom: 1;
    }